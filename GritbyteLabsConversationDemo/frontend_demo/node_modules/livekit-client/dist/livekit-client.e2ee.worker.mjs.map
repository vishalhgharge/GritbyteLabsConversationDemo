{"version":3,"file":"livekit-client.e2ee.worker.mjs","sources":["../node_modules/.pnpm/loglevel@1.9.1/node_modules/loglevel/lib/loglevel.js","../src/logger.ts","../node_modules/.pnpm/@livekit+mutex@1.0.0/node_modules/@livekit/mutex/dist/index.mjs","../src/utils/AsyncQueue.ts","../src/e2ee/constants.ts","../src/room/errors.ts","../src/e2ee/errors.ts","../src/e2ee/events.ts","../node_modules/.pnpm/events@3.3.0/node_modules/events/events.js","../src/e2ee/utils.ts","../src/e2ee/worker/SifGuard.ts","../src/e2ee/worker/FrameCryptor.ts","../src/e2ee/worker/ParticipantKeyHandler.ts","../src/e2ee/worker/e2ee.worker.ts"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import * as log from 'loglevel';\n\nexport enum LogLevel {\n  trace = 0,\n  debug = 1,\n  info = 2,\n  warn = 3,\n  error = 4,\n  silent = 5,\n}\n\nexport enum LoggerNames {\n  Default = 'livekit',\n  Room = 'livekit-room',\n  Participant = 'livekit-participant',\n  Track = 'livekit-track',\n  Publication = 'livekit-track-publication',\n  Engine = 'livekit-engine',\n  Signal = 'livekit-signal',\n  PCManager = 'livekit-pc-manager',\n  PCTransport = 'livekit-pc-transport',\n  E2EE = 'lk-e2ee',\n}\n\ntype LogLevelString = keyof typeof LogLevel;\n\nexport type StructuredLogger = log.Logger & {\n  trace: (msg: string, context?: object) => void;\n  debug: (msg: string, context?: object) => void;\n  info: (msg: string, context?: object) => void;\n  warn: (msg: string, context?: object) => void;\n  error: (msg: string, context?: object) => void;\n  setDefaultLevel: (level: log.LogLevelDesc) => void;\n  setLevel: (level: log.LogLevelDesc) => void;\n  getLevel: () => number;\n};\n\nlet livekitLogger = log.getLogger('livekit');\nconst livekitLoggers = Object.values(LoggerNames).map((name) => log.getLogger(name));\n\nlivekitLogger.setDefaultLevel(LogLevel.info);\n\nexport default livekitLogger as StructuredLogger;\n\n/**\n * @internal\n */\nexport function getLogger(name: string) {\n  const logger = log.getLogger(name);\n  logger.setDefaultLevel(livekitLogger.getLevel());\n  return logger as StructuredLogger;\n}\n\nexport function setLogLevel(level: LogLevel | LogLevelString, loggerName?: LoggerNames) {\n  if (loggerName) {\n    log.getLogger(loggerName).setLevel(level);\n  } else {\n    for (const logger of livekitLoggers) {\n      logger.setLevel(level);\n    }\n  }\n}\n\nexport type LogExtension = (level: LogLevel, msg: string, context?: object) => void;\n\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nexport function setLogExtension(extension: LogExtension, logger?: StructuredLogger) {\n  const loggers = logger ? [logger] : livekitLoggers;\n\n  loggers.forEach((logR) => {\n    const originalFactory = logR.methodFactory;\n\n    logR.methodFactory = (methodName, configLevel, loggerName) => {\n      const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n      const logLevel = LogLevel[methodName as LogLevelString];\n      const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n\n      return (msg, context?: [msg: string, context: object]) => {\n        if (context) rawMethod(msg, context);\n        else rawMethod(msg);\n        if (needLog) {\n          extension(logLevel, msg, context);\n        }\n      };\n    };\n    logR.setLevel(logR.getLevel());\n  });\n}\n\nexport const workerLogger = log.getLogger('lk-e2ee') as StructuredLogger;\n","var k = Object.defineProperty;\nvar n = (s, o, c) => o in s ? k(s, o, { enumerable: !0, configurable: !0, writable: !0, value: c }) : s[o] = c;\nvar l = (s, o, c) => n(s, typeof o != \"symbol\" ? o + \"\" : o, c);\nclass h {\n  constructor() {\n    l(this, \"_locking\");\n    l(this, \"_locks\");\n    this._locking = Promise.resolve(), this._locks = 0;\n  }\n  isLocked() {\n    return this._locks > 0;\n  }\n  lock() {\n    this._locks += 1;\n    let o;\n    const c = new Promise(\n      (i) => o = () => {\n        this._locks -= 1, i();\n      }\n    ), t = this._locking.then(() => o);\n    return this._locking = this._locking.then(() => c), t;\n  }\n}\nexport {\n  h as Mutex\n};\n//# sourceMappingURL=index.mjs.map\n","import { Mutex } from '@livekit/mutex';\n\ntype QueueTask<T> = () => PromiseLike<T>;\n\nenum QueueTaskStatus {\n  'WAITING',\n  'RUNNING',\n  'COMPLETED',\n}\n\ntype QueueTaskInfo = {\n  id: number;\n  enqueuedAt: number;\n  executedAt?: number;\n  status: QueueTaskStatus;\n};\n\nexport class AsyncQueue {\n  private pendingTasks: Map<number, QueueTaskInfo>;\n\n  private taskMutex: Mutex;\n\n  private nextTaskIndex: number;\n\n  constructor() {\n    this.pendingTasks = new Map();\n    this.taskMutex = new Mutex();\n    this.nextTaskIndex = 0;\n  }\n\n  async run<T>(task: QueueTask<T>) {\n    const taskInfo: QueueTaskInfo = {\n      id: this.nextTaskIndex++,\n      enqueuedAt: Date.now(),\n      status: QueueTaskStatus.WAITING,\n    };\n    this.pendingTasks.set(taskInfo.id, taskInfo);\n    const unlock = await this.taskMutex.lock();\n    try {\n      taskInfo.executedAt = Date.now();\n      taskInfo.status = QueueTaskStatus.RUNNING;\n      return await task();\n    } finally {\n      taskInfo.status = QueueTaskStatus.COMPLETED;\n      this.pendingTasks.delete(taskInfo.id);\n      unlock();\n    }\n  }\n\n  async flush() {\n    return this.run(async () => {});\n  }\n\n  snapshot() {\n    return Array.from(this.pendingTasks.values());\n  }\n}\n","import type { KeyProviderOptions } from './types';\n\nexport const ENCRYPTION_ALGORITHM = 'AES-GCM';\n\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nexport const DECRYPTION_FAILURE_TOLERANCE = 10;\n\n// We copy the first bytes of the VP8 payload unencrypted.\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\n//   https://tools.ietf.org/html/rfc6386#section-9.1\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\n// instead of being unable to decode).\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\n//\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\n//   https://tools.ietf.org/html/rfc6716#section-3.1\nexport const UNENCRYPTED_BYTES = {\n  key: 10,\n  delta: 3,\n  audio: 1, // frame.type is not set on audio, so this is set manually\n  empty: 0,\n} as const;\n\n/* We use a 12 byte bit IV. This is signalled in plain together with the\n packet. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters */\nexport const IV_LENGTH = 12;\n\n// flag set to indicate that e2ee has been setup for sender/receiver;\nexport const E2EE_FLAG = 'lk_e2ee';\n\nexport const SALT = 'LKFrameEncryptionKey';\n\nexport const KEY_PROVIDER_DEFAULTS: KeyProviderOptions = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n  keyringSize: 16,\n} as const;\n\nexport const MAX_SIF_COUNT = 100;\nexport const MAX_SIF_DURATION = 2000;\n","import { DisconnectReason, RequestResponse_Reason } from '@livekit/protocol';\n\nexport class LivekitError extends Error {\n  code: number;\n\n  constructor(code: number, message?: string) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\n\nexport const enum ConnectionErrorReason {\n  NotAllowed,\n  ServerUnreachable,\n  InternalError,\n  Cancelled,\n  LeaveRequest,\n}\n\nexport class ConnectionError extends LivekitError {\n  status?: number;\n\n  context?: unknown | DisconnectReason;\n\n  reason: ConnectionErrorReason;\n\n  constructor(\n    message: string,\n    reason: ConnectionErrorReason,\n    status?: number,\n    context?: unknown | DisconnectReason,\n  ) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n    this.context = context;\n  }\n}\n\nexport class DeviceUnsupportedError extends LivekitError {\n  constructor(message?: string) {\n    super(21, message ?? 'device is unsupported');\n  }\n}\n\nexport class TrackInvalidError extends LivekitError {\n  constructor(message?: string) {\n    super(20, message ?? 'track is invalid');\n  }\n}\n\nexport class UnsupportedServer extends LivekitError {\n  constructor(message?: string) {\n    super(10, message ?? 'unsupported server');\n  }\n}\n\nexport class UnexpectedConnectionState extends LivekitError {\n  constructor(message?: string) {\n    super(12, message ?? 'unexpected connection state');\n  }\n}\n\nexport class NegotiationError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to negotiate');\n  }\n}\n\nexport class PublishDataError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to publish data');\n  }\n}\n\nexport type RequestErrorReason =\n  | Exclude<RequestResponse_Reason, RequestResponse_Reason.OK>\n  | 'TimeoutError';\n\nexport class SignalRequestError extends LivekitError {\n  reason: RequestErrorReason;\n\n  constructor(message: string, reason: RequestErrorReason) {\n    super(15, message);\n    this.reason = reason;\n  }\n}\n\nexport enum MediaDeviceFailure {\n  // user rejected permissions\n  PermissionDenied = 'PermissionDenied',\n  // device is not available\n  NotFound = 'NotFound',\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  DeviceInUse = 'DeviceInUse',\n  Other = 'Other',\n}\n\nexport namespace MediaDeviceFailure {\n  export function getFailure(error: any): MediaDeviceFailure | undefined {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n}\n","import { LivekitError } from '../room/errors';\n\nexport enum CryptorErrorReason {\n  InvalidKey = 0,\n  MissingKey = 1,\n  InternalError = 2,\n}\n\nexport class CryptorError extends LivekitError {\n  reason: CryptorErrorReason;\n\n  participantIdentity?: string;\n\n  constructor(\n    message?: string,\n    reason: CryptorErrorReason = CryptorErrorReason.InternalError,\n    participantIdentity?: string,\n  ) {\n    super(40, message);\n    this.reason = reason;\n    this.participantIdentity = participantIdentity;\n  }\n}\n","import type Participant from '../room/participant/Participant';\nimport type { CryptorError } from './errors';\nimport type { KeyInfo } from './types';\n\nexport enum KeyProviderEvent {\n  SetKey = 'setKey',\n  RatchetRequest = 'ratchetRequest',\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type KeyProviderCallbacks = {\n  [KeyProviderEvent.SetKey]: (keyInfo: KeyInfo) => void;\n  [KeyProviderEvent.RatchetRequest]: (participantIdentity?: string, keyIndex?: number) => void;\n  [KeyProviderEvent.KeyRatcheted]: (material: CryptoKey, keyIndex?: number) => void;\n};\n\nexport enum KeyHandlerEvent {\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type ParticipantKeyHandlerCallbacks = {\n  [KeyHandlerEvent.KeyRatcheted]: (\n    material: CryptoKey,\n    participantIdentity: string,\n    keyIndex?: number,\n  ) => void;\n};\n\nexport enum EncryptionEvent {\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n  EncryptionError = 'encryptionError',\n}\n\nexport type E2EEManagerCallbacks = {\n  [EncryptionEvent.ParticipantEncryptionStatusChanged]: (\n    enabled: boolean,\n    participant: Participant,\n  ) => void;\n  [EncryptionEvent.EncryptionError]: (error: Error) => void;\n};\n\nexport type CryptorCallbacks = {\n  [CryptorEvent.Error]: (error: CryptorError) => void;\n};\n\nexport enum CryptorEvent {\n  Error = 'cryptorError',\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import { ENCRYPTION_ALGORITHM } from './constants';\n\nexport function isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\n\nexport function isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\n\nexport function isInsertableStreamSupported() {\n  return (\n    typeof window.RTCRtpSender !== 'undefined' &&\n    // @ts-ignore\n    typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined'\n  );\n}\n\nexport function isVideoFrame(\n  frame: RTCEncodedAudioFrame | RTCEncodedVideoFrame,\n): frame is RTCEncodedVideoFrame {\n  return 'type' in frame;\n}\n\nexport async function importKey(\n  keyBytes: Uint8Array | ArrayBuffer,\n  algorithm: string | { name: string } = { name: ENCRYPTION_ALGORITHM },\n  usage: 'derive' | 'encrypt' = 'encrypt',\n) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  return crypto.subtle.importKey(\n    'raw',\n    keyBytes,\n    algorithm,\n    false,\n    usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt'],\n  );\n}\n\nexport async function createKeyMaterialFromString(password: string) {\n  let enc = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    {\n      name: 'PBKDF2',\n    },\n    false,\n    ['deriveBits', 'deriveKey'],\n  );\n\n  return keyMaterial;\n}\n\nexport async function createKeyMaterialFromBuffer(cryptoBuffer: ArrayBuffer) {\n  const keyMaterial = await crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, [\n    'deriveBits',\n    'deriveKey',\n  ]);\n\n  return keyMaterial;\n}\n\nfunction getAlgoOptions(algorithmName: string, salt: string) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128),\n      };\n    case 'PBKDF2': {\n      return {\n        name: 'PBKDF2',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        iterations: 100000,\n      };\n    }\n    default:\n      throw new Error(`algorithm ${algorithmName} is currently unsupported`);\n  }\n}\n\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material: CryptoKey, salt: string) {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n  // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n  const encryptionKey = await crypto.subtle.deriveKey(\n    algorithmOptions,\n    material,\n    {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128,\n    },\n    false,\n    ['encrypt', 'decrypt'],\n  );\n\n  return { material, encryptionKey };\n}\n\nexport function createE2EEKey(): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nexport async function ratchet(material: CryptoKey, salt: string): Promise<ArrayBuffer> {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n  return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n}\n\nexport function needsRbspUnescaping(frameData: Uint8Array) {\n  for (var i = 0; i < frameData.length - 3; i++) {\n    if (frameData[i] == 0 && frameData[i + 1] == 0 && frameData[i + 2] == 3) return true;\n  }\n  return false;\n}\n\nexport function parseRbsp(stream: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var length = stream.length;\n  for (var i = 0; i < stream.length; ) {\n    // Be careful about over/underflow here. byte_length_ - 3 can underflow, and\n    // i + 3 can overflow, but byte_length_ - i can't, because i < byte_length_\n    // above, and that expression will produce the number of bytes left in\n    // the stream including the byte at i.\n    if (length - i >= 3 && !stream[i] && !stream[i + 1] && stream[i + 2] == 3) {\n      // Two rbsp bytes.\n      dataOut.push(stream[i++]);\n      dataOut.push(stream[i++]);\n      // Skip the emulation byte.\n      i++;\n    } else {\n      // Single rbsp byte.\n      dataOut.push(stream[i++]);\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n\nconst kZerosInStartSequence = 2;\nconst kEmulationByte = 3;\n\nexport function writeRbsp(data_in: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var numConsecutiveZeros = 0;\n  for (var i = 0; i < data_in.length; ++i) {\n    var byte = data_in[i];\n    if (byte <= kEmulationByte && numConsecutiveZeros >= kZerosInStartSequence) {\n      // Need to escape.\n      dataOut.push(kEmulationByte);\n      numConsecutiveZeros = 0;\n    }\n    dataOut.push(byte);\n    if (byte == 0) {\n      ++numConsecutiveZeros;\n    } else {\n      numConsecutiveZeros = 0;\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n","import { MAX_SIF_COUNT, MAX_SIF_DURATION } from '../constants';\n\nexport class SifGuard {\n  private consecutiveSifCount = 0;\n\n  private sifSequenceStartedAt: number | undefined;\n\n  private lastSifReceivedAt: number = 0;\n\n  private userFramesSinceSif: number = 0;\n\n  recordSif() {\n    this.consecutiveSifCount += 1;\n    this.sifSequenceStartedAt ??= Date.now();\n    this.lastSifReceivedAt = Date.now();\n  }\n\n  recordUserFrame() {\n    if (this.sifSequenceStartedAt === undefined) {\n      return;\n    } else {\n      this.userFramesSinceSif += 1;\n    }\n    if (\n      // reset if we received more user frames than SIFs\n      this.userFramesSinceSif > this.consecutiveSifCount ||\n      // also reset if we got a new user frame and the latest SIF frame hasn't been updated in a while\n      Date.now() - this.lastSifReceivedAt > MAX_SIF_DURATION\n    ) {\n      this.reset();\n    }\n  }\n\n  isSifAllowed() {\n    return (\n      this.consecutiveSifCount < MAX_SIF_COUNT &&\n      (this.sifSequenceStartedAt === undefined ||\n        Date.now() - this.sifSequenceStartedAt < MAX_SIF_DURATION)\n    );\n  }\n\n  reset() {\n    this.userFramesSinceSif = 0;\n    this.consecutiveSifCount = 0;\n    this.sifSequenceStartedAt = undefined;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n// TODO code inspired by https://github.com/webrtc/samples/blob/gh-pages/src/content/insertable-streams/endtoend-encryption/js/worker.js\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport type { VideoCodec } from '../../room/track/options';\nimport { ENCRYPTION_ALGORITHM, IV_LENGTH, UNENCRYPTED_BYTES } from '../constants';\nimport { CryptorError, CryptorErrorReason } from '../errors';\nimport { type CryptorCallbacks, CryptorEvent } from '../events';\nimport type { DecodeRatchetOptions, KeyProviderOptions, KeySet } from '../types';\nimport { deriveKeys, isVideoFrame, needsRbspUnescaping, parseRbsp, writeRbsp } from '../utils';\nimport type { ParticipantKeyHandler } from './ParticipantKeyHandler';\nimport { SifGuard } from './SifGuard';\n\nexport const encryptionEnabledMap: Map<string, boolean> = new Map();\n\nexport interface FrameCryptorConstructor {\n  new (opts?: unknown): BaseFrameCryptor;\n}\n\nexport interface TransformerInfo {\n  readable: ReadableStream;\n  writable: WritableStream;\n  transformer: TransformStream;\n  abortController: AbortController;\n}\n\nexport class BaseFrameCryptor extends (EventEmitter as new () => TypedEventEmitter<CryptorCallbacks>) {\n  protected encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n\n  protected decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n}\n\n/**\n * Cryptor is responsible for en-/decrypting media frames.\n * Each Cryptor instance is responsible for en-/decrypting a single mediaStreamTrack.\n */\nexport class FrameCryptor extends BaseFrameCryptor {\n  private sendCounts: Map<number, number>;\n\n  private participantIdentity: string | undefined;\n\n  private trackId: string | undefined;\n\n  private keys: ParticipantKeyHandler;\n\n  private videoCodec?: VideoCodec;\n\n  private rtpMap: Map<number, VideoCodec>;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  /**\n   * used for detecting server injected unencrypted frames\n   */\n  private sifTrailer: Uint8Array;\n\n  private sifGuard: SifGuard;\n\n  private detectedCodec?: VideoCodec;\n\n  constructor(opts: {\n    keys: ParticipantKeyHandler;\n    participantIdentity: string;\n    keyProviderOptions: KeyProviderOptions;\n    sifTrailer?: Uint8Array;\n  }) {\n    super();\n    this.sendCounts = new Map();\n    this.keys = opts.keys;\n    this.participantIdentity = opts.participantIdentity;\n    this.rtpMap = new Map();\n    this.keyProviderOptions = opts.keyProviderOptions;\n    this.sifTrailer = opts.sifTrailer ?? Uint8Array.from([]);\n    this.sifGuard = new SifGuard();\n  }\n\n  private get logContext() {\n    return {\n      participant: this.participantIdentity,\n      mediaTrackId: this.trackId,\n      fallbackCodec: this.videoCodec,\n    };\n  }\n\n  /**\n   * Assign a different participant to the cryptor.\n   * useful for transceiver re-use\n   * @param id\n   * @param keys\n   */\n  setParticipant(id: string, keys: ParticipantKeyHandler) {\n    workerLogger.debug('setting new participant on cryptor', {\n      ...this.logContext,\n      participant: id,\n    });\n    if (this.participantIdentity) {\n      workerLogger.error(\n        'cryptor has already a participant set, participant should have been unset before',\n        {\n          ...this.logContext,\n        },\n      );\n    }\n    this.participantIdentity = id;\n    this.keys = keys;\n    this.sifGuard.reset();\n  }\n\n  unsetParticipant() {\n    workerLogger.debug('unsetting participant', this.logContext);\n    this.participantIdentity = undefined;\n  }\n\n  isEnabled() {\n    if (this.participantIdentity) {\n      return encryptionEnabledMap.get(this.participantIdentity);\n    } else {\n      return undefined;\n    }\n  }\n\n  getParticipantIdentity() {\n    return this.participantIdentity;\n  }\n\n  getTrackId() {\n    return this.trackId;\n  }\n\n  /**\n   * Update the video codec used by the mediaStreamTrack\n   * @param codec\n   */\n  setVideoCodec(codec: VideoCodec) {\n    this.videoCodec = codec;\n  }\n\n  /**\n   * rtp payload type map used for figuring out codec of payload type when encoding\n   * @param map\n   */\n  setRtpMap(map: Map<number, VideoCodec>) {\n    this.rtpMap = map;\n  }\n\n  setupTransform(\n    operation: 'encode' | 'decode',\n    readable: ReadableStream<RTCEncodedVideoFrame | RTCEncodedAudioFrame>,\n    writable: WritableStream<RTCEncodedVideoFrame | RTCEncodedAudioFrame>,\n    trackId: string,\n    codec?: VideoCodec,\n  ) {\n    if (codec) {\n      workerLogger.info('setting codec on cryptor to', { codec });\n      this.videoCodec = codec;\n    }\n\n    workerLogger.debug('Setting up frame cryptor transform', {\n      operation,\n      passedTrackId: trackId,\n      codec,\n      ...this.logContext,\n    });\n\n    const transformFn = operation === 'encode' ? this.encodeFunction : this.decodeFunction;\n    const transformStream = new TransformStream({\n      transform: transformFn.bind(this),\n    });\n\n    readable\n      .pipeThrough(transformStream)\n      .pipeTo(writable)\n      .catch((e) => {\n        workerLogger.warn(e);\n        this.emit(\n          CryptorEvent.Error,\n          e instanceof CryptorError\n            ? e\n            : new CryptorError(e.message, undefined, this.participantIdentity),\n        );\n      });\n    this.trackId = trackId;\n  }\n\n  setSifTrailer(trailer: Uint8Array) {\n    workerLogger.debug('setting SIF trailer', { ...this.logContext, trailer });\n    this.sifTrailer = trailer;\n  }\n\n  /**\n   * Function that will be injected in a stream and will encrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   *\n   * The VP8 payload descriptor described in\n   * https://tools.ietf.org/html/rfc7741#section-4.2\n   * is part of the RTP packet and not part of the frame and is not controllable by us.\n   * This is fine as the SFU keeps having access to it for routing.\n   *\n   * The encrypted frame is formed as follows:\n   * 1) Find unencrypted byte length, depending on the codec, frame type and kind.\n   * 2) Form the GCM IV for the frame as described above.\n   * 3) Encrypt the rest of the frame using AES-GCM.\n   * 4) Allocate space for the encrypted frame.\n   * 5) Copy the unencrypted bytes to the start of the encrypted frame.\n   * 6) Append the ciphertext to the encrypted frame.\n   * 7) Append the IV.\n   * 8) Append a single byte for the key identifier.\n   * 9) Enqueue the encrypted frame for sending.\n   */\n  protected async encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.isEnabled() ||\n      // skip for encryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      return controller.enqueue(encodedFrame);\n    }\n    const keySet = this.keys.getKeySet();\n    if (!keySet) {\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(\n          `key set not found for ${\n            this.participantIdentity\n          } at index ${this.keys.getCurrentKeyIndex()}`,\n          CryptorErrorReason.MissingKey,\n          this.participantIdentity,\n        ),\n      );\n      return;\n    }\n    const { encryptionKey } = keySet;\n    const keyIndex = this.keys.getCurrentKeyIndex();\n\n    if (encryptionKey) {\n      const iv = this.makeIV(\n        encodedFrame.getMetadata().synchronizationSource ?? -1,\n        encodedFrame.timestamp,\n      );\n      let frameInfo = this.getUnencryptedBytes(encodedFrame);\n\n      // Thіs is not encrypted and contains the VP8 payload descriptor or the Opus TOC byte.\n      const frameHeader = new Uint8Array(encodedFrame.data, 0, frameInfo.unencryptedBytes);\n\n      // Frame trailer contains the R|IV_LENGTH and key index\n      const frameTrailer = new Uint8Array(2);\n\n      frameTrailer[0] = IV_LENGTH;\n      frameTrailer[1] = keyIndex;\n\n      // Construct frame trailer. Similar to the frame header described in\n      // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n      // but we put it at the end.\n      //\n      // ---------+-------------------------+-+---------+----\n      // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n      // ---------+-------------------------+-+---------+----\n      try {\n        const cipherText = await crypto.subtle.encrypt(\n          {\n            name: ENCRYPTION_ALGORITHM,\n            iv,\n            additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n          },\n          encryptionKey,\n          new Uint8Array(encodedFrame.data, frameInfo.unencryptedBytes),\n        );\n\n        let newDataWithoutHeader = new Uint8Array(\n          cipherText.byteLength + iv.byteLength + frameTrailer.byteLength,\n        );\n        newDataWithoutHeader.set(new Uint8Array(cipherText)); // add ciphertext.\n        newDataWithoutHeader.set(new Uint8Array(iv), cipherText.byteLength); // append IV.\n        newDataWithoutHeader.set(frameTrailer, cipherText.byteLength + iv.byteLength); // append frame trailer.\n\n        if (frameInfo.isH264) {\n          newDataWithoutHeader = writeRbsp(newDataWithoutHeader);\n        }\n\n        var newData = new Uint8Array(frameHeader.byteLength + newDataWithoutHeader.byteLength);\n        newData.set(frameHeader);\n        newData.set(newDataWithoutHeader, frameHeader.byteLength);\n\n        encodedFrame.data = newData.buffer;\n\n        return controller.enqueue(encodedFrame);\n      } catch (e: any) {\n        // TODO: surface this to the app.\n        workerLogger.error(e);\n      }\n    } else {\n      workerLogger.debug('failed to encrypt, emitting error', this.logContext);\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(\n          `encryption key missing for encoding`,\n          CryptorErrorReason.MissingKey,\n          this.participantIdentity,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Function that will be injected in a stream and will decrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   */\n  protected async decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.isEnabled() ||\n      // skip for decryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      workerLogger.debug('skipping empty frame', this.logContext);\n      this.sifGuard.recordUserFrame();\n      return controller.enqueue(encodedFrame);\n    }\n\n    if (isFrameServerInjected(encodedFrame.data, this.sifTrailer)) {\n      workerLogger.debug('enqueue SIF', this.logContext);\n      this.sifGuard.recordSif();\n\n      if (this.sifGuard.isSifAllowed()) {\n        encodedFrame.data = encodedFrame.data.slice(\n          0,\n          encodedFrame.data.byteLength - this.sifTrailer.byteLength,\n        );\n        return controller.enqueue(encodedFrame);\n      } else {\n        workerLogger.warn('SIF limit reached, dropping frame');\n        return;\n      }\n    } else {\n      this.sifGuard.recordUserFrame();\n    }\n    const data = new Uint8Array(encodedFrame.data);\n    const keyIndex = data[encodedFrame.data.byteLength - 1];\n\n    if (this.keys.hasInvalidKeyAtIndex(keyIndex)) {\n      // drop frame\n      return;\n    }\n\n    if (this.keys.getKeySet(keyIndex)) {\n      try {\n        const decodedFrame = await this.decryptFrame(encodedFrame, keyIndex);\n        this.keys.decryptionSuccess(keyIndex);\n        if (decodedFrame) {\n          return controller.enqueue(decodedFrame);\n        }\n      } catch (error) {\n        if (error instanceof CryptorError && error.reason === CryptorErrorReason.InvalidKey) {\n          // emit an error if the key handler thinks we have a valid key\n          if (this.keys.hasValidKey) {\n            this.emit(CryptorEvent.Error, error);\n            this.keys.decryptionFailure(keyIndex);\n          }\n        } else {\n          workerLogger.warn('decoding frame failed', { error });\n        }\n      }\n    } else {\n      // emit an error if the key index is out of bounds but the key handler thinks we still have a valid key\n      workerLogger.warn(`skipping decryption due to missing key at index ${keyIndex}`);\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(\n          `missing key at index ${keyIndex} for participant ${this.participantIdentity}`,\n          CryptorErrorReason.MissingKey,\n          this.participantIdentity,\n        ),\n      );\n      this.keys.decryptionFailure(keyIndex);\n    }\n  }\n\n  /**\n   * Function that will decrypt the given encoded frame. If the decryption fails, it will\n   * ratchet the key for up to RATCHET_WINDOW_SIZE times.\n   */\n  private async decryptFrame(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    keyIndex: number,\n    initialMaterial: KeySet | undefined = undefined,\n    ratchetOpts: DecodeRatchetOptions = { ratchetCount: 0 },\n  ): Promise<RTCEncodedVideoFrame | RTCEncodedAudioFrame | undefined> {\n    const keySet = this.keys.getKeySet(keyIndex);\n    if (!ratchetOpts.encryptionKey && !keySet) {\n      throw new TypeError(`no encryption key found for decryption of ${this.participantIdentity}`);\n    }\n    let frameInfo = this.getUnencryptedBytes(encodedFrame);\n\n    // Construct frame trailer. Similar to the frame header described in\n    // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n    // but we put it at the end.\n    //\n    // ---------+-------------------------+-+---------+----\n    // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n    // ---------+-------------------------+-+---------+----\n\n    try {\n      const frameHeader = new Uint8Array(encodedFrame.data, 0, frameInfo.unencryptedBytes);\n      var encryptedData = new Uint8Array(\n        encodedFrame.data,\n        frameHeader.length,\n        encodedFrame.data.byteLength - frameHeader.length,\n      );\n      if (frameInfo.isH264 && needsRbspUnescaping(encryptedData)) {\n        encryptedData = parseRbsp(encryptedData);\n        const newUint8 = new Uint8Array(frameHeader.byteLength + encryptedData.byteLength);\n        newUint8.set(frameHeader);\n        newUint8.set(encryptedData, frameHeader.byteLength);\n        encodedFrame.data = newUint8.buffer;\n      }\n\n      const frameTrailer = new Uint8Array(encodedFrame.data, encodedFrame.data.byteLength - 2, 2);\n\n      const ivLength = frameTrailer[0];\n      const iv = new Uint8Array(\n        encodedFrame.data,\n        encodedFrame.data.byteLength - ivLength - frameTrailer.byteLength,\n        ivLength,\n      );\n\n      const cipherTextStart = frameHeader.byteLength;\n      const cipherTextLength =\n        encodedFrame.data.byteLength -\n        (frameHeader.byteLength + ivLength + frameTrailer.byteLength);\n\n      const plainText = await crypto.subtle.decrypt(\n        {\n          name: ENCRYPTION_ALGORITHM,\n          iv,\n          additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n        },\n        ratchetOpts.encryptionKey ?? keySet!.encryptionKey,\n        new Uint8Array(encodedFrame.data, cipherTextStart, cipherTextLength),\n      );\n\n      const newData = new ArrayBuffer(frameHeader.byteLength + plainText.byteLength);\n      const newUint8 = new Uint8Array(newData);\n\n      newUint8.set(new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength));\n      newUint8.set(new Uint8Array(plainText), frameHeader.byteLength);\n\n      encodedFrame.data = newData;\n\n      return encodedFrame;\n    } catch (error: any) {\n      if (this.keyProviderOptions.ratchetWindowSize > 0) {\n        if (ratchetOpts.ratchetCount < this.keyProviderOptions.ratchetWindowSize) {\n          workerLogger.debug(\n            `ratcheting key attempt ${ratchetOpts.ratchetCount} of ${\n              this.keyProviderOptions.ratchetWindowSize\n            }, for kind ${encodedFrame instanceof RTCEncodedAudioFrame ? 'audio' : 'video'}`,\n          );\n\n          let ratchetedKeySet: KeySet | undefined;\n          if ((initialMaterial ?? keySet) === this.keys.getKeySet(keyIndex)) {\n            // only ratchet if the currently set key is still the same as the one used to decrypt this frame\n            // if not, it might be that a different frame has already ratcheted and we try with that one first\n            const newMaterial = await this.keys.ratchetKey(keyIndex, false);\n\n            ratchetedKeySet = await deriveKeys(newMaterial, this.keyProviderOptions.ratchetSalt);\n          }\n\n          const frame = await this.decryptFrame(encodedFrame, keyIndex, initialMaterial || keySet, {\n            ratchetCount: ratchetOpts.ratchetCount + 1,\n            encryptionKey: ratchetedKeySet?.encryptionKey,\n          });\n          if (frame && ratchetedKeySet) {\n            // before updating the keys, make sure that the keySet used for this frame is still the same as the currently set key\n            // if it's not, a new key might have been set already, which we don't want to override\n            if ((initialMaterial ?? keySet) === this.keys.getKeySet(keyIndex)) {\n              this.keys.setKeySet(ratchetedKeySet, keyIndex, true);\n              // decryption was successful, set the new key index to reflect the ratcheted key set\n              this.keys.setCurrentKeyIndex(keyIndex);\n            }\n          }\n          return frame;\n        } else {\n          /**\n           * Because we only set a new key once decryption has been successful,\n           * we can be sure that we don't need to reset the key to the initial material at this point\n           * as the key has not been updated on the keyHandler instance\n           */\n\n          workerLogger.warn('maximum ratchet attempts exceeded');\n          throw new CryptorError(\n            `valid key missing for participant ${this.participantIdentity}`,\n            CryptorErrorReason.InvalidKey,\n            this.participantIdentity,\n          );\n        }\n      } else {\n        throw new CryptorError(\n          `Decryption failed: ${error.message}`,\n          CryptorErrorReason.InvalidKey,\n          this.participantIdentity,\n        );\n      }\n    }\n  }\n\n  /**\n   * Construct the IV used for AES-GCM and sent (in plain) with the packet similar to\n   * https://tools.ietf.org/html/rfc7714#section-8.1\n   * It concatenates\n   * - the 32 bit synchronization source (SSRC) given on the encoded frame,\n   * - the 32 bit rtp timestamp given on the encoded frame,\n   * - a send counter that is specific to the SSRC. Starts at a random number.\n   * The send counter is essentially the pictureId but we currently have to implement this ourselves.\n   * There is no XOR with a salt. Note that this IV leaks the SSRC to the receiver but since this is\n   * randomly generated and SFUs may not rewrite this is considered acceptable.\n   * The SSRC is used to allow demultiplexing multiple streams with the same key, as described in\n   *   https://tools.ietf.org/html/rfc3711#section-4.1.1\n   * The RTP timestamp is 32 bits and advances by the codec clock rate (90khz for video, 48khz for\n   * opus audio) every second. For video it rolls over roughly every 13 hours.\n   * The send counter will advance at the frame rate (30fps for video, 50fps for 20ms opus audio)\n   * every second. It will take a long time to roll over.\n   *\n   * See also https://developer.mozilla.org/en-US/docs/Web/API/AesGcmParams\n   */\n  private makeIV(synchronizationSource: number, timestamp: number) {\n    const iv = new ArrayBuffer(IV_LENGTH);\n    const ivView = new DataView(iv);\n\n    // having to keep our own send count (similar to a picture id) is not ideal.\n    if (!this.sendCounts.has(synchronizationSource)) {\n      // Initialize with a random offset, similar to the RTP sequence number.\n      this.sendCounts.set(synchronizationSource, Math.floor(Math.random() * 0xffff));\n    }\n\n    const sendCount = this.sendCounts.get(synchronizationSource) ?? 0;\n\n    ivView.setUint32(0, synchronizationSource);\n    ivView.setUint32(4, timestamp);\n    ivView.setUint32(8, timestamp - (sendCount % 0xffff));\n\n    this.sendCounts.set(synchronizationSource, sendCount + 1);\n\n    return iv;\n  }\n\n  private getUnencryptedBytes(frame: RTCEncodedVideoFrame | RTCEncodedAudioFrame): {\n    unencryptedBytes: number;\n    isH264: boolean;\n  } {\n    var frameInfo = { unencryptedBytes: 0, isH264: false };\n    if (isVideoFrame(frame)) {\n      let detectedCodec = this.getVideoCodec(frame) ?? this.videoCodec;\n      if (detectedCodec !== this.detectedCodec) {\n        workerLogger.debug('detected different codec', {\n          detectedCodec,\n          oldCodec: this.detectedCodec,\n          ...this.logContext,\n        });\n        this.detectedCodec = detectedCodec;\n      }\n\n      if (detectedCodec === 'av1') {\n        throw new Error(`${detectedCodec} is not yet supported for end to end encryption`);\n      }\n\n      if (detectedCodec === 'vp8') {\n        frameInfo.unencryptedBytes = UNENCRYPTED_BYTES[frame.type];\n      } else if (detectedCodec === 'vp9') {\n        frameInfo.unencryptedBytes = 0;\n        return frameInfo;\n      }\n\n      const data = new Uint8Array(frame.data);\n      try {\n        const naluIndices = findNALUIndices(data);\n\n        // if the detected codec is undefined we test whether it _looks_ like a h264 frame as a best guess\n        frameInfo.isH264 =\n          detectedCodec === 'h264' ||\n          naluIndices.some((naluIndex) =>\n            [NALUType.SLICE_IDR, NALUType.SLICE_NON_IDR].includes(parseNALUType(data[naluIndex])),\n          );\n\n        if (frameInfo.isH264) {\n          for (const index of naluIndices) {\n            let type = parseNALUType(data[index]);\n            switch (type) {\n              case NALUType.SLICE_IDR:\n              case NALUType.SLICE_NON_IDR:\n                frameInfo.unencryptedBytes = index + 2;\n                return frameInfo;\n              default:\n                break;\n            }\n          }\n          throw new TypeError('Could not find NALU');\n        }\n      } catch (e) {\n        // no op, we just continue and fallback to vp8\n      }\n\n      frameInfo.unencryptedBytes = UNENCRYPTED_BYTES[frame.type];\n      return frameInfo;\n    } else {\n      frameInfo.unencryptedBytes = UNENCRYPTED_BYTES.audio;\n      return frameInfo;\n    }\n  }\n\n  /**\n   * inspects frame payloadtype if available and maps it to the codec specified in rtpMap\n   */\n  private getVideoCodec(frame: RTCEncodedVideoFrame): VideoCodec | undefined {\n    if (this.rtpMap.size === 0) {\n      return undefined;\n    }\n    const payloadType = frame.getMetadata().payloadType;\n    const codec = payloadType ? this.rtpMap.get(payloadType) : undefined;\n    return codec;\n  }\n}\n\n/**\n * Slice the NALUs present in the supplied buffer, assuming it is already byte-aligned\n * code adapted from https://github.com/medooze/h264-frame-parser/blob/main/lib/NalUnits.ts to return indices only\n */\nexport function findNALUIndices(stream: Uint8Array): number[] {\n  const result: number[] = [];\n  let start = 0,\n    pos = 0,\n    searchLength = stream.length - 2;\n  while (pos < searchLength) {\n    // skip until end of current NALU\n    while (\n      pos < searchLength &&\n      !(stream[pos] === 0 && stream[pos + 1] === 0 && stream[pos + 2] === 1)\n    )\n      pos++;\n    if (pos >= searchLength) pos = stream.length;\n    // remove trailing zeros from current NALU\n    let end = pos;\n    while (end > start && stream[end - 1] === 0) end--;\n    // save current NALU\n    if (start === 0) {\n      if (end !== start) throw TypeError('byte stream contains leading data');\n    } else {\n      result.push(start);\n    }\n    // begin new NALU\n    start = pos = pos + 3;\n  }\n  return result;\n}\n\nexport function parseNALUType(startByte: number): NALUType {\n  return startByte & kNaluTypeMask;\n}\n\nconst kNaluTypeMask = 0x1f;\n\nexport enum NALUType {\n  /** Coded slice of a non-IDR picture */\n  SLICE_NON_IDR = 1,\n  /** Coded slice data partition A */\n  SLICE_PARTITION_A = 2,\n  /** Coded slice data partition B */\n  SLICE_PARTITION_B = 3,\n  /** Coded slice data partition C */\n  SLICE_PARTITION_C = 4,\n  /** Coded slice of an IDR picture */\n  SLICE_IDR = 5,\n  /** Supplemental enhancement information */\n  SEI = 6,\n  /** Sequence parameter set */\n  SPS = 7,\n  /** Picture parameter set */\n  PPS = 8,\n  /** Access unit delimiter */\n  AUD = 9,\n  /** End of sequence */\n  END_SEQ = 10,\n  /** End of stream */\n  END_STREAM = 11,\n  /** Filler data */\n  FILLER_DATA = 12,\n  /** Sequence parameter set extension */\n  SPS_EXT = 13,\n  /** Prefix NAL unit */\n  PREFIX_NALU = 14,\n  /** Subset sequence parameter set */\n  SUBSET_SPS = 15,\n  /** Depth parameter set */\n  DPS = 16,\n\n  // 17, 18 reserved\n\n  /** Coded slice of an auxiliary coded picture without partitioning */\n  SLICE_AUX = 19,\n  /** Coded slice extension */\n  SLICE_EXT = 20,\n  /** Coded slice extension for a depth view component or a 3D-AVC texture view component */\n  SLICE_LAYER_EXT = 21,\n\n  // 22, 23 reserved\n}\n\n/**\n * we use a magic frame trailer to detect whether a frame is injected\n * by the livekit server and thus to be treated as unencrypted\n * @internal\n */\nexport function isFrameServerInjected(frameData: ArrayBuffer, trailerBytes: Uint8Array): boolean {\n  if (trailerBytes.byteLength === 0) {\n    return false;\n  }\n  const frameTrailer = new Uint8Array(\n    frameData.slice(frameData.byteLength - trailerBytes.byteLength),\n  );\n  return trailerBytes.every((value, index) => value === frameTrailer[index]);\n}\n","import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport { KeyHandlerEvent, type ParticipantKeyHandlerCallbacks } from '../events';\nimport type { KeyProviderOptions, KeySet } from '../types';\nimport { deriveKeys, importKey, ratchet } from '../utils';\n\n// TODO ParticipantKeyHandlers currently don't get destroyed on participant disconnect\n// we could do this by having a separate worker message on participant disconnected.\n\n/**\n * ParticipantKeyHandler is responsible for providing a cryptor instance with the\n * en-/decryption key of a participant. It assumes that all tracks of a specific participant\n * are encrypted with the same key.\n * Additionally it exposes a method to ratchet a key which can be used by the cryptor either automatically\n * if decryption fails or can be triggered manually on both sender and receiver side.\n *\n */\nexport class ParticipantKeyHandler extends (EventEmitter as new () => TypedEventEmitter<ParticipantKeyHandlerCallbacks>) {\n  private currentKeyIndex: number;\n\n  private cryptoKeyRing: Array<KeySet | undefined>;\n\n  private decryptionFailureCounts: Array<number>;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  private ratchetPromiseMap: Map<number, Promise<CryptoKey>>;\n\n  private participantIdentity: string;\n\n  /**\n   * true if the current key has not been marked as invalid\n   */\n  get hasValidKey(): boolean {\n    return !this.hasInvalidKeyAtIndex(this.currentKeyIndex);\n  }\n\n  constructor(participantIdentity: string, keyProviderOptions: KeyProviderOptions) {\n    super();\n    this.currentKeyIndex = 0;\n    if (keyProviderOptions.keyringSize < 1 || keyProviderOptions.keyringSize > 256) {\n      throw new TypeError('Keyring size needs to be between 1 and 256');\n    }\n    this.cryptoKeyRing = new Array(keyProviderOptions.keyringSize).fill(undefined);\n    this.decryptionFailureCounts = new Array(keyProviderOptions.keyringSize).fill(0);\n    this.keyProviderOptions = keyProviderOptions;\n    this.ratchetPromiseMap = new Map();\n    this.participantIdentity = participantIdentity;\n  }\n\n  /**\n   * Returns true if the key at the given index is marked as invalid.\n   *\n   * @param keyIndex the index of the key\n   */\n  hasInvalidKeyAtIndex(keyIndex: number): boolean {\n    return (\n      this.keyProviderOptions.failureTolerance >= 0 &&\n      this.decryptionFailureCounts[keyIndex] > this.keyProviderOptions.failureTolerance\n    );\n  }\n\n  /**\n   * Informs the key handler that a decryption failure occurred for an encryption key.\n   * @internal\n   * @param keyIndex the key index for which the failure occurred. Defaults to the current key index.\n   */\n  decryptionFailure(keyIndex: number = this.currentKeyIndex): void {\n    if (this.keyProviderOptions.failureTolerance < 0) {\n      return;\n    }\n\n    this.decryptionFailureCounts[keyIndex] += 1;\n\n    if (this.decryptionFailureCounts[keyIndex] > this.keyProviderOptions.failureTolerance) {\n      workerLogger.warn(\n        `key for ${this.participantIdentity} at index ${keyIndex} is being marked as invalid`,\n      );\n    }\n  }\n\n  /**\n   * Informs the key handler that a frame was successfully decrypted using an encryption key.\n   * @internal\n   * @param keyIndex the key index for which the success occurred. Defaults to the current key index.\n   */\n  decryptionSuccess(keyIndex: number = this.currentKeyIndex): void {\n    this.resetKeyStatus(keyIndex);\n  }\n\n  /**\n   * Call this after user initiated ratchet or a new key has been set in order to make sure to mark potentially\n   * invalid keys as valid again\n   *\n   * @param keyIndex the index of the key. Defaults to the current key index.\n   */\n  resetKeyStatus(keyIndex?: number): void {\n    if (keyIndex === undefined) {\n      this.decryptionFailureCounts.fill(0);\n    } else {\n      this.decryptionFailureCounts[keyIndex] = 0;\n    }\n  }\n\n  /**\n   * Ratchets the current key (or the one at keyIndex if provided) and\n   * returns the ratcheted material\n   * if `setKey` is true (default), it will also set the ratcheted key directly on the crypto key ring\n   * @param keyIndex\n   * @param setKey\n   */\n  ratchetKey(keyIndex?: number, setKey = true): Promise<CryptoKey> {\n    const currentKeyIndex = keyIndex ?? this.getCurrentKeyIndex();\n\n    const existingPromise = this.ratchetPromiseMap.get(currentKeyIndex);\n    if (typeof existingPromise !== 'undefined') {\n      return existingPromise;\n    }\n    const ratchetPromise = new Promise<CryptoKey>(async (resolve, reject) => {\n      try {\n        const keySet = this.getKeySet(currentKeyIndex);\n        if (!keySet) {\n          throw new TypeError(\n            `Cannot ratchet key without a valid keyset of participant ${this.participantIdentity}`,\n          );\n        }\n        const currentMaterial = keySet.material;\n        const newMaterial = await importKey(\n          await ratchet(currentMaterial, this.keyProviderOptions.ratchetSalt),\n          currentMaterial.algorithm.name,\n          'derive',\n        );\n\n        if (setKey) {\n          await this.setKeyFromMaterial(newMaterial, currentKeyIndex, true);\n          this.emit(\n            KeyHandlerEvent.KeyRatcheted,\n            newMaterial,\n            this.participantIdentity,\n            currentKeyIndex,\n          );\n        }\n        resolve(newMaterial);\n      } catch (e) {\n        reject(e);\n      } finally {\n        this.ratchetPromiseMap.delete(currentKeyIndex);\n      }\n    });\n    this.ratchetPromiseMap.set(currentKeyIndex, ratchetPromise);\n    return ratchetPromise;\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffer\n   * together with the material\n   * also resets the valid key property and updates the currentKeyIndex\n   */\n  async setKey(material: CryptoKey, keyIndex = 0) {\n    await this.setKeyFromMaterial(material, keyIndex);\n    this.resetKeyStatus(keyIndex);\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffers\n   * together with the material\n   * also updates the currentKeyIndex\n   */\n  async setKeyFromMaterial(material: CryptoKey, keyIndex: number, emitRatchetEvent = false) {\n    const keySet = await deriveKeys(material, this.keyProviderOptions.ratchetSalt);\n    const newIndex = keyIndex >= 0 ? keyIndex % this.cryptoKeyRing.length : this.currentKeyIndex;\n    workerLogger.debug(`setting new key with index ${keyIndex}`, {\n      usage: material.usages,\n      algorithm: material.algorithm,\n      ratchetSalt: this.keyProviderOptions.ratchetSalt,\n    });\n    this.setKeySet(keySet, newIndex, emitRatchetEvent);\n    if (newIndex >= 0) this.currentKeyIndex = newIndex;\n  }\n\n  setKeySet(keySet: KeySet, keyIndex: number, emitRatchetEvent = false) {\n    this.cryptoKeyRing[keyIndex % this.cryptoKeyRing.length] = keySet;\n\n    if (emitRatchetEvent) {\n      this.emit(KeyHandlerEvent.KeyRatcheted, keySet.material, this.participantIdentity, keyIndex);\n    }\n  }\n\n  async setCurrentKeyIndex(index: number) {\n    this.currentKeyIndex = index % this.cryptoKeyRing.length;\n    this.resetKeyStatus(index);\n  }\n\n  getCurrentKeyIndex() {\n    return this.currentKeyIndex;\n  }\n\n  /**\n   * returns currently used KeySet or the one at `keyIndex` if provided\n   * @param keyIndex\n   * @returns\n   */\n  getKeySet(keyIndex?: number) {\n    return this.cryptoKeyRing[keyIndex ?? this.currentKeyIndex];\n  }\n}\n","import { workerLogger } from '../../logger';\nimport type { VideoCodec } from '../../room/track/options';\nimport { AsyncQueue } from '../../utils/AsyncQueue';\nimport { KEY_PROVIDER_DEFAULTS } from '../constants';\nimport { CryptorErrorReason } from '../errors';\nimport { CryptorEvent, KeyHandlerEvent } from '../events';\nimport type {\n  E2EEWorkerMessage,\n  ErrorMessage,\n  InitAck,\n  KeyProviderOptions,\n  RatchetMessage,\n  RatchetRequestMessage,\n} from '../types';\nimport { FrameCryptor, encryptionEnabledMap } from './FrameCryptor';\nimport { ParticipantKeyHandler } from './ParticipantKeyHandler';\n\nconst participantCryptors: FrameCryptor[] = [];\nconst participantKeys: Map<string, ParticipantKeyHandler> = new Map();\nlet sharedKeyHandler: ParticipantKeyHandler | undefined;\nlet messageQueue = new AsyncQueue();\n\nlet isEncryptionEnabled: boolean = false;\n\nlet useSharedKey: boolean = false;\n\nlet sifTrailer: Uint8Array | undefined;\n\nlet keyProviderOptions: KeyProviderOptions = KEY_PROVIDER_DEFAULTS;\n\nlet rtpMap: Map<number, VideoCodec> = new Map();\n\nworkerLogger.setDefaultLevel('info');\n\nonmessage = (ev) => {\n  messageQueue.run(async () => {\n    const { kind, data }: E2EEWorkerMessage = ev.data;\n\n    switch (kind) {\n      case 'init':\n        workerLogger.setLevel(data.loglevel);\n        workerLogger.info('worker initialized');\n        keyProviderOptions = data.keyProviderOptions;\n        useSharedKey = !!data.keyProviderOptions.sharedKey;\n        // acknowledge init successful\n        const ackMsg: InitAck = {\n          kind: 'initAck',\n          data: { enabled: isEncryptionEnabled },\n        };\n        postMessage(ackMsg);\n        break;\n      case 'enable':\n        setEncryptionEnabled(data.enabled, data.participantIdentity);\n        workerLogger.info(\n          `updated e2ee enabled status for ${data.participantIdentity} to ${data.enabled}`,\n        );\n        // acknowledge enable call successful\n        postMessage(ev.data);\n        break;\n      case 'decode':\n        let cryptor = getTrackCryptor(data.participantIdentity, data.trackId);\n        cryptor.setupTransform(\n          kind,\n          data.readableStream,\n          data.writableStream,\n          data.trackId,\n          data.codec,\n        );\n        break;\n      case 'encode':\n        let pubCryptor = getTrackCryptor(data.participantIdentity, data.trackId);\n        pubCryptor.setupTransform(\n          kind,\n          data.readableStream,\n          data.writableStream,\n          data.trackId,\n          data.codec,\n        );\n        break;\n      case 'setKey':\n        if (useSharedKey) {\n          await setSharedKey(data.key, data.keyIndex);\n        } else if (data.participantIdentity) {\n          workerLogger.info(\n            `set participant sender key ${data.participantIdentity} index ${data.keyIndex}`,\n          );\n          await getParticipantKeyHandler(data.participantIdentity).setKey(data.key, data.keyIndex);\n        } else {\n          workerLogger.error('no participant Id was provided and shared key usage is disabled');\n        }\n        break;\n      case 'removeTransform':\n        unsetCryptorParticipant(data.trackId, data.participantIdentity);\n        break;\n      case 'updateCodec':\n        getTrackCryptor(data.participantIdentity, data.trackId).setVideoCodec(data.codec);\n        break;\n      case 'setRTPMap':\n        // this is only used for the local participant\n        rtpMap = data.map;\n        participantCryptors.forEach((cr) => {\n          if (cr.getParticipantIdentity() === data.participantIdentity) {\n            cr.setRtpMap(data.map);\n          }\n        });\n        break;\n      case 'ratchetRequest':\n        handleRatchetRequest(data);\n        break;\n      case 'setSifTrailer':\n        handleSifTrailer(data.trailer);\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nasync function handleRatchetRequest(data: RatchetRequestMessage['data']) {\n  if (useSharedKey) {\n    const keyHandler = getSharedKeyHandler();\n    await keyHandler.ratchetKey(data.keyIndex);\n    keyHandler.resetKeyStatus();\n  } else if (data.participantIdentity) {\n    const keyHandler = getParticipantKeyHandler(data.participantIdentity);\n    await keyHandler.ratchetKey(data.keyIndex);\n    keyHandler.resetKeyStatus();\n  } else {\n    workerLogger.error(\n      'no participant Id was provided for ratchet request and shared key usage is disabled',\n    );\n  }\n}\n\nfunction getTrackCryptor(participantIdentity: string, trackId: string) {\n  let cryptors = participantCryptors.filter((c) => c.getTrackId() === trackId);\n  if (cryptors.length > 1) {\n    const debugInfo = cryptors\n      .map((c) => {\n        return { participant: c.getParticipantIdentity() };\n      })\n      .join(',');\n    workerLogger.error(\n      `Found multiple cryptors for the same trackID ${trackId}. target participant: ${participantIdentity} `,\n      { participants: debugInfo },\n    );\n  }\n  let cryptor = cryptors[0];\n  if (!cryptor) {\n    workerLogger.info('creating new cryptor for', { participantIdentity });\n    if (!keyProviderOptions) {\n      throw Error('Missing keyProvider options');\n    }\n    cryptor = new FrameCryptor({\n      participantIdentity,\n      keys: getParticipantKeyHandler(participantIdentity),\n      keyProviderOptions,\n      sifTrailer,\n    });\n    cryptor.setRtpMap(rtpMap);\n    setupCryptorErrorEvents(cryptor);\n    participantCryptors.push(cryptor);\n  } else if (participantIdentity !== cryptor.getParticipantIdentity()) {\n    // assign new participant id to track cryptor and pass in correct key handler\n    cryptor.setParticipant(participantIdentity, getParticipantKeyHandler(participantIdentity));\n  }\n\n  return cryptor;\n}\n\nfunction getParticipantKeyHandler(participantIdentity: string) {\n  if (useSharedKey) {\n    return getSharedKeyHandler();\n  }\n  let keys = participantKeys.get(participantIdentity);\n  if (!keys) {\n    keys = new ParticipantKeyHandler(participantIdentity, keyProviderOptions);\n    keys.on(KeyHandlerEvent.KeyRatcheted, emitRatchetedKeys);\n    participantKeys.set(participantIdentity, keys);\n  }\n  return keys;\n}\n\nfunction getSharedKeyHandler() {\n  if (!sharedKeyHandler) {\n    workerLogger.debug('creating new shared key handler');\n    sharedKeyHandler = new ParticipantKeyHandler('shared-key', keyProviderOptions);\n  }\n  return sharedKeyHandler;\n}\n\nfunction unsetCryptorParticipant(trackId: string, participantIdentity: string) {\n  const cryptors = participantCryptors.filter(\n    (c) => c.getParticipantIdentity() === participantIdentity && c.getTrackId() === trackId,\n  );\n  if (cryptors.length > 1) {\n    workerLogger.error('Found multiple cryptors for the same participant and trackID combination', {\n      trackId,\n      participantIdentity,\n    });\n  }\n  const cryptor = cryptors[0];\n  if (!cryptor) {\n    workerLogger.warn('Could not unset participant on cryptor', { trackId, participantIdentity });\n  } else {\n    cryptor.unsetParticipant();\n  }\n}\n\nfunction setEncryptionEnabled(enable: boolean, participantIdentity: string) {\n  workerLogger.debug(`setting encryption enabled for all tracks of ${participantIdentity}`, {\n    enable,\n  });\n  encryptionEnabledMap.set(participantIdentity, enable);\n}\n\nasync function setSharedKey(key: CryptoKey, index?: number) {\n  workerLogger.info('set shared key', { index });\n  await getSharedKeyHandler().setKey(key, index);\n}\n\nfunction setupCryptorErrorEvents(cryptor: FrameCryptor) {\n  cryptor.on(CryptorEvent.Error, (error) => {\n    const msg: ErrorMessage = {\n      kind: 'error',\n      data: { error: new Error(`${CryptorErrorReason[error.reason]}: ${error.message}`) },\n    };\n    postMessage(msg);\n  });\n}\n\nfunction emitRatchetedKeys(material: CryptoKey, participantIdentity: string, keyIndex?: number) {\n  const msg: RatchetMessage = {\n    kind: `ratchetKey`,\n    data: {\n      participantIdentity,\n      keyIndex,\n      material,\n    },\n  };\n  postMessage(msg);\n}\n\nfunction handleSifTrailer(trailer: Uint8Array) {\n  sifTrailer = trailer;\n  participantCryptors.forEach((c) => {\n    c.setSifTrailer(trailer);\n  });\n}\n\n// Operations using RTCRtpScriptTransform.\n// @ts-ignore\nif (self.RTCTransformEvent) {\n  workerLogger.debug('setup transform event');\n  // @ts-ignore\n  self.onrtctransform = (event: RTCTransformEvent) => {\n    // @ts-ignore .transformer property is part of RTCTransformEvent\n    const transformer = event.transformer;\n    workerLogger.debug('transformer', transformer);\n    // @ts-ignore monkey patching non standard flag\n    transformer.handled = true;\n    const { kind, participantIdentity, trackId, codec } = transformer.options;\n    const cryptor = getTrackCryptor(participantIdentity, trackId);\n    workerLogger.debug('transform', { codec });\n    cryptor.setupTransform(kind, transformer.readable, transformer.writable, trackId, codec);\n  };\n}\n"],"names":["root","definition","module","exports","log","this","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","trace","realMethod","undefined","replaceLoggingMethods","level","getLevel","i","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","self","inheritedLevel","defaultLevel","userLevel","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","cookieName","location","indexOf","exec","slice","clearPersistedLevel","removeItem","normalizeLevel","input","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","LogLevel","LoggerNames","livekitLogger","Object","values","map","info","workerLogger","h","constructor","l","_locking","Promise","resolve","_locks","isLocked","lock","o","c","unlockNext","t","then","QueueTaskStatus","AsyncQueue","pendingTasks","Map","taskMutex","Mutex","nextTaskIndex","run","task","taskInfo","id","enqueuedAt","Date","now","status","WAITING","set","unlock","executedAt","RUNNING","COMPLETED","delete","flush","__awaiter","snapshot","Array","from","ENCRYPTION_ALGORITHM","DECRYPTION_FAILURE_TOLERANCE","UNENCRYPTED_BYTES","key","delta","audio","empty","IV_LENGTH","SALT","KEY_PROVIDER_DEFAULTS","sharedKey","ratchetSalt","ratchetWindowSize","failureTolerance","keyringSize","MAX_SIF_COUNT","MAX_SIF_DURATION","LivekitError","Error","code","message","ConnectionErrorReason","MediaDeviceFailure","getFailure","error","NotFound","PermissionDenied","DeviceInUse","Other","CryptorErrorReason","CryptorError","reason","InternalError","participantIdentity","KeyProviderEvent","KeyHandlerEvent","EncryptionEvent","CryptorEvent","R","Reflect","ReflectApply","target","receiver","args","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","eventsModule","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","defineProperty","enumerable","get","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","emit","type","push","doError","events","er","err","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","index","pop","ret","reject","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","isVideoFrame","frame","importKey","keyBytes_1","keyBytes","algorithm","usage","crypto","subtle","getAlgoOptions","algorithmName","salt","textEncoder","TextEncoder","encodedSalt","encode","hash","ArrayBuffer","iterations","deriveKeys","material","algorithmOptions","encryptionKey","deriveKey","ratchet","deriveBits","needsRbspUnescaping","frameData","parseRbsp","stream","dataOut","Uint8Array","kZerosInStartSequence","kEmulationByte","writeRbsp","data_in","numConsecutiveZeros","byte","SifGuard","consecutiveSifCount","lastSifReceivedAt","userFramesSinceSif","recordSif","_a","sifSequenceStartedAt","recordUserFrame","reset","isSifAllowed","encryptionEnabledMap","BaseFrameCryptor","encodeFunction","encodedFrame","controller","decodeFunction","FrameCryptor","opts","sendCounts","rtpMap","keyProviderOptions","sifTrailer","sifGuard","logContext","participant","mediaTrackId","trackId","fallbackCodec","videoCodec","setParticipant","assign","unsetParticipant","isEnabled","getParticipantIdentity","getTrackId","setVideoCodec","codec","setRtpMap","setupTransform","operation","readable","writable","passedTrackId","transformFn","transformStream","TransformStream","transform","pipeThrough","pipeTo","catch","setSifTrailer","trailer","data","byteLength","enqueue","keySet","getKeySet","getCurrentKeyIndex","MissingKey","keyIndex","iv","makeIV","getMetadata","synchronizationSource","timestamp","frameInfo","getUnencryptedBytes","frameHeader","unencryptedBytes","frameTrailer","cipherText","encrypt","additionalData","newDataWithoutHeader","isH264","newData","buffer","isFrameServerInjected","hasInvalidKeyAtIndex","decodedFrame","decryptFrame","decryptionSuccess","InvalidKey","hasValidKey","decryptionFailure","encodedFrame_1","keyIndex_1","_this","initialMaterial","ratchetOpts","ratchetCount","encryptedData","newUint8","ivLength","cipherTextStart","cipherTextLength","plainText","decrypt","RTCEncodedAudioFrame","ratchetedKeySet","newMaterial","ratchetKey","setKeySet","setCurrentKeyIndex","ivView","DataView","has","Math","floor","random","sendCount","setUint32","detectedCodec","getVideoCodec","oldCodec","naluIndices","findNALUIndices","some","naluIndex","NALUType","SLICE_IDR","SLICE_NON_IDR","includes","parseNALUType","size","payloadType","result","start","pos","searchLength","end","startByte","kNaluTypeMask","trailerBytes","every","ParticipantKeyHandler","currentKeyIndex","cryptoKeyRing","fill","decryptionFailureCounts","ratchetPromiseMap","resetKeyStatus","setKey","existingPromise","ratchetPromise","currentMaterial","setKeyFromMaterial","KeyRatcheted","material_1","_this2","emitRatchetEvent","newIndex","usages","participantCryptors","participantKeys","sharedKeyHandler","messageQueue","isEncryptionEnabled","useSharedKey","onmessage","ev","kind","loglevel","ackMsg","enabled","postMessage","setEncryptionEnabled","cryptor","getTrackCryptor","readableStream","writableStream","pubCryptor","setSharedKey","getParticipantKeyHandler","unsetCryptorParticipant","forEach","cr","handleRatchetRequest","handleSifTrailer","keyHandler","getSharedKeyHandler","cryptors","filter","debugInfo","join","participants","setupCryptorErrorEvents","emitRatchetedKeys","enable","msg","RTCTransformEvent","onrtctransform","event","transformer","handled","options"],"mappings":"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","x_google_ignoreList":[0,2,8]}