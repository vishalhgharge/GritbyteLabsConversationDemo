{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\AL FAHIM\\\\AL FAHIM\\\\frontend_demo\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport { Telephone, TelephoneX } from 'react-bootstrap-icons'; // Import the icons you want to use\nimport '@fontsource/raleway'; // Defaults to weight 400\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst agentId = \"agent_19bf74b7ba9ece1dadb5c759fe\";\nconst retellWebClient = new RetellWebClient();\nconst App = () => {\n  _s();\n  const [isCalling, setIsCalling] = useState(false);\n  const [isAI, setIsAI] = useState(false); // Track if AI or User is speaking\n  const [listening, setListening] = useState(false); // Track if user is speaking\n\n  useEffect(() => {\n    // Event listeners to start/stop AI speaking\n    retellWebClient.on(\"agent_start_talking\", () => {\n      setIsAI(true); // AI starts speaking\n      setListening(false); // Stop listening when AI speaks\n    });\n    retellWebClient.on(\"agent_stop_talking\", () => {\n      setIsAI(false); // AI stops speaking\n      setListening(true); // Start listening for user\n    });\n    retellWebClient.on(\"user_start_talking\", () => {\n      setIsAI(false); // User starts speaking\n      setListening(true); // Start listening when user speaks\n    });\n    retellWebClient.on(\"user_stop_talking\", () => {\n      setIsAI(true); // User stops speaking\n      setListening(false); // Stop listening when user stops talking\n    });\n  }, []);\n  const toggleConversation = async () => {\n    if (isCalling) {\n      retellWebClient.stopCall();\n      setIsCalling(false); // End the call\n      setIsAI(false);\n      setListening(false);\n    } else {\n      const registerCallResponse = await registerCall(agentId);\n      if (registerCallResponse.access_token) {\n        retellWebClient.startCall({\n          accessToken: registerCallResponse.access_token\n        }).catch(console.error);\n        setIsCalling(true); // Start the call\n        setIsAI(true);\n      }\n    }\n  };\n  async function registerCall(agentId) {\n    try {\n      const response = await fetch(\"http://localhost:8080/create-web-call\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          agent_id: agentId\n        })\n      });\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.log(\"Error in registerCall:\", err);\n      throw new Error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '50px',\n          fontFamily: 'Raleway, sans-serif'\n        },\n        children: \"Al Fahim Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pulse-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `audio-spectrum ${isAI ? 'active' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `pulse-animation ${isAI ? 'animate' : ''}`,\n          children: [isAI && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equalizer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equalizer-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equalizer-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equalizer-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equalizer-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"equalizer-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/latin-man-avatar-people-04feb2024__9_-ID32942-2000x2000-removebg-preview.png\",\n            alt: \"AI\",\n            className: \"circle-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !isAI && listening && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"listening-text\",\n        children: \"Listening...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleConversation,\n        className: `call-button ${isCalling ? \"stop\" : \"start\"}`,\n        children: isCalling ? /*#__PURE__*/_jsxDEV(TelephoneX, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(Telephone, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IO+EtaTm5gh1+e0xdRFqlojdjfU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","RetellWebClient","Telephone","TelephoneX","jsxDEV","_jsxDEV","agentId","retellWebClient","App","_s","isCalling","setIsCalling","isAI","setIsAI","listening","setListening","on","toggleConversation","stopCall","registerCallResponse","registerCall","access_token","startCall","accessToken","catch","console","error","response","fetch","method","headers","body","JSON","stringify","agent_id","data","json","err","log","Error","className","children","style","marginBottom","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/AL FAHIM/AL FAHIM/frontend_demo/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { RetellWebClient } from \"retell-client-js-sdk\";\nimport { Telephone, TelephoneX } from 'react-bootstrap-icons'; // Import the icons you want to use\nimport '@fontsource/raleway'; // Defaults to weight 400\n\nconst agentId = \"agent_19bf74b7ba9ece1dadb5c759fe\";\nconst retellWebClient = new RetellWebClient();\n\nconst App = () => {\n  const [isCalling, setIsCalling] = useState(false);\n  const [isAI, setIsAI] = useState<boolean>(false); // Track if AI or User is speaking\n  const [listening, setListening] = useState<boolean>(false); // Track if user is speaking\n\n  useEffect(() => {\n    // Event listeners to start/stop AI speaking\n    retellWebClient.on(\"agent_start_talking\", () => {\n      setIsAI(true); // AI starts speaking\n      setListening(false); // Stop listening when AI speaks\n    });\n\n    retellWebClient.on(\"agent_stop_talking\", () => {\n      setIsAI(false); // AI stops speaking\n      setListening(true); // Start listening for user\n    });\n\n    retellWebClient.on(\"user_start_talking\", () => {\n      setIsAI(false); // User starts speaking\n      setListening(true); // Start listening when user speaks\n    });\n\n    retellWebClient.on(\"user_stop_talking\", () => {\n      setIsAI(true); // User stops speaking\n      setListening(false); // Stop listening when user stops talking\n    });\n  }, []);\n\n  const toggleConversation = async () => {\n    if (isCalling) {\n      retellWebClient.stopCall();\n      setIsCalling(false); // End the call\n      setIsAI(false);\n      setListening(false);\n    } else {\n      const registerCallResponse = await registerCall(agentId);\n      if (registerCallResponse.access_token) {\n        retellWebClient\n          .startCall({\n            accessToken: registerCallResponse.access_token,\n          })\n          .catch(console.error);\n        setIsCalling(true); // Start the call\n        setIsAI(true);\n      }\n    }\n  };\n\n  async function registerCall(agentId: string): Promise<{ access_token: string }> {\n    try {\n      const response = await fetch(\"http://localhost:8080/create-web-call\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          agent_id: agentId,\n        }),\n      });\n\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.log(\"Error in registerCall:\", err);\n      throw new Error(err);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{ marginBottom: '50px', fontFamily: 'Raleway, sans-serif' }}>Al Fahim Demo</h1>\n        \n        {/* Circle Animation with Audio Spectrum */}\n        <div className=\"pulse-container\">\n          {/* Outer Circle Audio Spectrum */}\n          <div className={`audio-spectrum ${isAI ? 'active' : ''}`}></div>\n\n          {/* Pulse Animation Inside */}\n          <div className={`pulse-animation ${isAI ? 'animate' : ''}`}>\n            {/* Equalizer Animation */}\n            {isAI && (\n              <div className=\"equalizer\">\n                <div className=\"equalizer-bar\"></div>\n                <div className=\"equalizer-bar\"></div>\n                <div className=\"equalizer-bar\"></div>\n                <div className=\"equalizer-bar\"></div>\n                <div className=\"equalizer-bar\"></div>\n              </div>\n            )}\n\n            {/* Image inside the circle */}\n            <img\n              src=\"/images/latin-man-avatar-people-04feb2024__9_-ID32942-2000x2000-removebg-preview.png\"\n              alt=\"AI\"\n              className=\"circle-image\"\n            />\n          </div>\n        </div>\n\n        {/* Show \"Listening...\" text when user speaks */}\n        {!isAI && listening && <p className=\"listening-text\">Listening...</p>}\n\n        {/* Start/Stop Button */}\n        <button\n          onClick={toggleConversation}\n          className={`call-button ${isCalling ? \"stop\" : \"start\"}`}\n        >\n          {/* Conditionally render the icon */}\n          {isCalling ? <TelephoneX size={40} /> : <Telephone size={40} />}\n        </button>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}